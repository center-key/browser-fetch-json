//! fetch-json v2.3.0 ~ github.com/center-key/fetch-json ~ MIT License
function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _defineProperty(a,b,c){return b in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _typeof(a){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}var fetchApi="object"===("undefined"==typeof window?"undefined":_typeof(window))&&window.fetch||require("node-fetch"),fetchJson={version:"2.3.0",request:function request(a,b,c,d){var e=_objectSpread(_objectSpread({},{method:a,credentials:"same-origin",strictErrors:!1}),d);e.method=e.method.toUpperCase();var f="GET"===e.method,g={Accept:"application/json"};!f&&c&&(g["Content-Type"]="application/json"),e.headers=_objectSpread(_objectSpread({},g),d&&d.headers);var h=f&&c?Object.keys(c):[];h.length&&(b=b+(b.includes("?")?"&":"?")+h.map(function toPair(a){return a+"="+encodeURIComponent(c[a])}).join("&")),!f&&c&&(e.body=JSON.stringify(c));var i=function(){return new Date().toISOString()},j=b.replace(/[?].*/,""),k=j.replace(/.*:[/][/]/,"").replace(/[:/].*/,"");return fetchJson.logger&&fetchJson.logger(i(),"request",e.method,k,j),fetchApi(b,e).then(function toJson(a){var b=a.headers.get("content-type"),c=b&&/json|javascript/.test(b);if(fetchJson.logger&&fetchJson.logger(i(),"response",e.method,k,j,a.ok,a.status,a.statusText,b),e.strictErrors&&!a.ok)throw Error("HTTP response status (\"strictErrors\" mode enabled): "+a.status);return c?a.json():a.text().then(function textToObj(c){return a.error=!a.ok,a.contentType=b,a.bodyText=c,a})})},get:function get(a,b,c){return fetchJson.request("GET",a,b,c)},post:function post(a,b,c){return fetchJson.request("POST",a,b,c)},put:function put(a,b,c){return fetchJson.request("PUT",a,b,c)},patch:function patch(a,b,c){return fetchJson.request("PATCH",a,b,c)},delete:function _delete(a,b,c){return fetchJson.request("DELETE",a,b,c)},logger:null,getLogHeaders:function getLogHeaders(){return["Timestamp","HTTP","Method","Domain","URL","Ok","Status","Text","Type"]},getLogHeaderIndex:function getLogHeaderIndex(){return{timestamp:0,http:1,method:2,domain:3,url:4,ok:5,status:6,text:7,type:8}},enableLogger:function enableLogger(a){var b=!1===a?null:console.log;return fetchJson.logger="function"==typeof a?a:b}};"object"===("undefined"==typeof module?"undefined":_typeof(module))&&(module.exports=fetchJson),"object"===("undefined"==typeof window?"undefined":_typeof(window))&&(window.fetchJson=fetchJson);
